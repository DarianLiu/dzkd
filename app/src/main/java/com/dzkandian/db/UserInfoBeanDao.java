package com.dzkandian.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.dzkandian.storage.bean.UserInfoBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "USER_INFO_BEAN".
*/
public class UserInfoBeanDao extends AbstractDao<UserInfoBean, Long> {

    public static final String TABLENAME = "USER_INFO_BEAN";

    /**
     * Properties of entity UserInfoBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property UserId = new Property(0, Long.class, "userId", true, "_id");
        public final static Property Username = new Property(1, String.class, "username", false, "USERNAME");
        public final static Property Phone = new Property(2, String.class, "phone", false, "PHONE");
        public final static Property Password = new Property(3, String.class, "password", false, "PASSWORD");
        public final static Property Salt = new Property(4, String.class, "salt", false, "SALT");
        public final static Property InviteCode = new Property(5, String.class, "inviteCode", false, "INVITE_CODE");
        public final static Property Avatar = new Property(6, String.class, "avatar", false, "AVATAR");
        public final static Property Gender = new Property(7, Long.class, "gender", false, "GENDER");
        public final static Property Birthday = new Property(8, String.class, "birthday", false, "BIRTHDAY");
        public final static Property Status = new Property(9, String.class, "status", false, "STATUS");
        public final static Property AlipayAccount = new Property(10, String.class, "alipayAccount", false, "ALIPAY_ACCOUNT");
        public final static Property AlipayName = new Property(11, String.class, "alipayName", false, "ALIPAY_NAME");
        public final static Property WeixinPayName = new Property(12, String.class, "weixinPayName", false, "WEIXIN_PAY_NAME");
        public final static Property WeixinPayPhone = new Property(13, String.class, "weixinPayPhone", false, "WEIXIN_PAY_PHONE");
        public final static Property WeixinPayNickname = new Property(14, String.class, "weixinPayNickname", false, "WEIXIN_PAY_NICKNAME");
        public final static Property WeixinPayOpenid = new Property(15, String.class, "weixinPayOpenid", false, "WEIXIN_PAY_OPENID");
        public final static Property WeixinPayAvatar = new Property(16, String.class, "weixinPayAvatar", false, "WEIXIN_PAY_AVATAR");
        public final static Property CreateTime = new Property(17, String.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifyTime = new Property(18, String.class, "modifyTime", false, "MODIFY_TIME");
        public final static Property DisableFlag = new Property(19, Long.class, "disableFlag", false, "DISABLE_FLAG");
        public final static Property DisableMsg = new Property(20, String.class, "disableMsg", false, "DISABLE_MSG");
        public final static Property DisableTime = new Property(21, String.class, "disableTime", false, "DISABLE_TIME");
        public final static Property AutoEnable = new Property(22, Long.class, "autoEnable", false, "AUTO_ENABLE");
        public final static Property AutoEnableTime = new Property(23, String.class, "autoEnableTime", false, "AUTO_ENABLE_TIME");
        public final static Property WeixinBindOpenid = new Property(24, String.class, "weixinBindOpenid", false, "WEIXIN_BIND_OPENID");
        public final static Property AlipayBindOpenid = new Property(25, String.class, "alipayBindOpenid", false, "ALIPAY_BIND_OPENID");
        public final static Property DeviceId = new Property(26, String.class, "deviceId", false, "DEVICE_ID");
        public final static Property DelFlag = new Property(27, Long.class, "delFlag", false, "DEL_FLAG");
        public final static Property WeixinPayAppid = new Property(28, String.class, "weixinPayAppid", false, "WEIXIN_PAY_APPID");
    }


    public UserInfoBeanDao(DaoConfig config) {
        super(config);
    }
    
    public UserInfoBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"USER_INFO_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: userId
                "\"USERNAME\" TEXT," + // 1: username
                "\"PHONE\" TEXT," + // 2: phone
                "\"PASSWORD\" TEXT," + // 3: password
                "\"SALT\" TEXT," + // 4: salt
                "\"INVITE_CODE\" TEXT," + // 5: inviteCode
                "\"AVATAR\" TEXT," + // 6: avatar
                "\"GENDER\" INTEGER," + // 7: gender
                "\"BIRTHDAY\" TEXT," + // 8: birthday
                "\"STATUS\" TEXT," + // 9: status
                "\"ALIPAY_ACCOUNT\" TEXT," + // 10: alipayAccount
                "\"ALIPAY_NAME\" TEXT," + // 11: alipayName
                "\"WEIXIN_PAY_NAME\" TEXT," + // 12: weixinPayName
                "\"WEIXIN_PAY_PHONE\" TEXT," + // 13: weixinPayPhone
                "\"WEIXIN_PAY_NICKNAME\" TEXT," + // 14: weixinPayNickname
                "\"WEIXIN_PAY_OPENID\" TEXT," + // 15: weixinPayOpenid
                "\"WEIXIN_PAY_AVATAR\" TEXT," + // 16: weixinPayAvatar
                "\"CREATE_TIME\" TEXT," + // 17: createTime
                "\"MODIFY_TIME\" TEXT," + // 18: modifyTime
                "\"DISABLE_FLAG\" INTEGER," + // 19: disableFlag
                "\"DISABLE_MSG\" TEXT," + // 20: disableMsg
                "\"DISABLE_TIME\" TEXT," + // 21: disableTime
                "\"AUTO_ENABLE\" INTEGER," + // 22: autoEnable
                "\"AUTO_ENABLE_TIME\" TEXT," + // 23: autoEnableTime
                "\"WEIXIN_BIND_OPENID\" TEXT," + // 24: weixinBindOpenid
                "\"ALIPAY_BIND_OPENID\" TEXT," + // 25: alipayBindOpenid
                "\"DEVICE_ID\" TEXT," + // 26: deviceId
                "\"DEL_FLAG\" INTEGER," + // 27: delFlag
                "\"WEIXIN_PAY_APPID\" TEXT);"); // 28: weixinPayAppid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"USER_INFO_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, UserInfoBean entity) {
        stmt.clearBindings();
 
        Long userId = entity.getUserId();
        if (userId != null) {
            stmt.bindLong(1, userId);
        }
 
        String username = entity.getUsername();
        if (username != null) {
            stmt.bindString(2, username);
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(3, phone);
        }
 
        String password = entity.getPassword();
        if (password != null) {
            stmt.bindString(4, password);
        }
 
        String salt = entity.getSalt();
        if (salt != null) {
            stmt.bindString(5, salt);
        }
 
        String inviteCode = entity.getInviteCode();
        if (inviteCode != null) {
            stmt.bindString(6, inviteCode);
        }
 
        String avatar = entity.getAvatar();
        if (avatar != null) {
            stmt.bindString(7, avatar);
        }
 
        Long gender = entity.getGender();
        if (gender != null) {
            stmt.bindLong(8, gender);
        }
 
        String birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindString(9, birthday);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(10, status);
        }
 
        String alipayAccount = entity.getAlipayAccount();
        if (alipayAccount != null) {
            stmt.bindString(11, alipayAccount);
        }
 
        String alipayName = entity.getAlipayName();
        if (alipayName != null) {
            stmt.bindString(12, alipayName);
        }
 
        String weixinPayName = entity.getWeixinPayName();
        if (weixinPayName != null) {
            stmt.bindString(13, weixinPayName);
        }
 
        String weixinPayPhone = entity.getWeixinPayPhone();
        if (weixinPayPhone != null) {
            stmt.bindString(14, weixinPayPhone);
        }
 
        String weixinPayNickname = entity.getWeixinPayNickname();
        if (weixinPayNickname != null) {
            stmt.bindString(15, weixinPayNickname);
        }
 
        String weixinPayOpenid = entity.getWeixinPayOpenid();
        if (weixinPayOpenid != null) {
            stmt.bindString(16, weixinPayOpenid);
        }
 
        String weixinPayAvatar = entity.getWeixinPayAvatar();
        if (weixinPayAvatar != null) {
            stmt.bindString(17, weixinPayAvatar);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(18, createTime);
        }
 
        String modifyTime = entity.getModifyTime();
        if (modifyTime != null) {
            stmt.bindString(19, modifyTime);
        }
 
        Long disableFlag = entity.getDisableFlag();
        if (disableFlag != null) {
            stmt.bindLong(20, disableFlag);
        }
 
        String disableMsg = entity.getDisableMsg();
        if (disableMsg != null) {
            stmt.bindString(21, disableMsg);
        }
 
        String disableTime = entity.getDisableTime();
        if (disableTime != null) {
            stmt.bindString(22, disableTime);
        }
 
        Long autoEnable = entity.getAutoEnable();
        if (autoEnable != null) {
            stmt.bindLong(23, autoEnable);
        }
 
        String autoEnableTime = entity.getAutoEnableTime();
        if (autoEnableTime != null) {
            stmt.bindString(24, autoEnableTime);
        }
 
        String weixinBindOpenid = entity.getWeixinBindOpenid();
        if (weixinBindOpenid != null) {
            stmt.bindString(25, weixinBindOpenid);
        }
 
        String alipayBindOpenid = entity.getAlipayBindOpenid();
        if (alipayBindOpenid != null) {
            stmt.bindString(26, alipayBindOpenid);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(27, deviceId);
        }
 
        Long delFlag = entity.getDelFlag();
        if (delFlag != null) {
            stmt.bindLong(28, delFlag);
        }
 
        String weixinPayAppid = entity.getWeixinPayAppid();
        if (weixinPayAppid != null) {
            stmt.bindString(29, weixinPayAppid);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, UserInfoBean entity) {
        stmt.clearBindings();
 
        Long userId = entity.getUserId();
        if (userId != null) {
            stmt.bindLong(1, userId);
        }
 
        String username = entity.getUsername();
        if (username != null) {
            stmt.bindString(2, username);
        }
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(3, phone);
        }
 
        String password = entity.getPassword();
        if (password != null) {
            stmt.bindString(4, password);
        }
 
        String salt = entity.getSalt();
        if (salt != null) {
            stmt.bindString(5, salt);
        }
 
        String inviteCode = entity.getInviteCode();
        if (inviteCode != null) {
            stmt.bindString(6, inviteCode);
        }
 
        String avatar = entity.getAvatar();
        if (avatar != null) {
            stmt.bindString(7, avatar);
        }
 
        Long gender = entity.getGender();
        if (gender != null) {
            stmt.bindLong(8, gender);
        }
 
        String birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindString(9, birthday);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(10, status);
        }
 
        String alipayAccount = entity.getAlipayAccount();
        if (alipayAccount != null) {
            stmt.bindString(11, alipayAccount);
        }
 
        String alipayName = entity.getAlipayName();
        if (alipayName != null) {
            stmt.bindString(12, alipayName);
        }
 
        String weixinPayName = entity.getWeixinPayName();
        if (weixinPayName != null) {
            stmt.bindString(13, weixinPayName);
        }
 
        String weixinPayPhone = entity.getWeixinPayPhone();
        if (weixinPayPhone != null) {
            stmt.bindString(14, weixinPayPhone);
        }
 
        String weixinPayNickname = entity.getWeixinPayNickname();
        if (weixinPayNickname != null) {
            stmt.bindString(15, weixinPayNickname);
        }
 
        String weixinPayOpenid = entity.getWeixinPayOpenid();
        if (weixinPayOpenid != null) {
            stmt.bindString(16, weixinPayOpenid);
        }
 
        String weixinPayAvatar = entity.getWeixinPayAvatar();
        if (weixinPayAvatar != null) {
            stmt.bindString(17, weixinPayAvatar);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(18, createTime);
        }
 
        String modifyTime = entity.getModifyTime();
        if (modifyTime != null) {
            stmt.bindString(19, modifyTime);
        }
 
        Long disableFlag = entity.getDisableFlag();
        if (disableFlag != null) {
            stmt.bindLong(20, disableFlag);
        }
 
        String disableMsg = entity.getDisableMsg();
        if (disableMsg != null) {
            stmt.bindString(21, disableMsg);
        }
 
        String disableTime = entity.getDisableTime();
        if (disableTime != null) {
            stmt.bindString(22, disableTime);
        }
 
        Long autoEnable = entity.getAutoEnable();
        if (autoEnable != null) {
            stmt.bindLong(23, autoEnable);
        }
 
        String autoEnableTime = entity.getAutoEnableTime();
        if (autoEnableTime != null) {
            stmt.bindString(24, autoEnableTime);
        }
 
        String weixinBindOpenid = entity.getWeixinBindOpenid();
        if (weixinBindOpenid != null) {
            stmt.bindString(25, weixinBindOpenid);
        }
 
        String alipayBindOpenid = entity.getAlipayBindOpenid();
        if (alipayBindOpenid != null) {
            stmt.bindString(26, alipayBindOpenid);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(27, deviceId);
        }
 
        Long delFlag = entity.getDelFlag();
        if (delFlag != null) {
            stmt.bindLong(28, delFlag);
        }
 
        String weixinPayAppid = entity.getWeixinPayAppid();
        if (weixinPayAppid != null) {
            stmt.bindString(29, weixinPayAppid);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public UserInfoBean readEntity(Cursor cursor, int offset) {
        UserInfoBean entity = new UserInfoBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // userId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // username
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // phone
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // password
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // salt
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // inviteCode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // avatar
            cursor.isNull(offset + 7) ? null : cursor.getLong(offset + 7), // gender
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // birthday
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // status
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // alipayAccount
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // alipayName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // weixinPayName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // weixinPayPhone
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // weixinPayNickname
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // weixinPayOpenid
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // weixinPayAvatar
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // createTime
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // modifyTime
            cursor.isNull(offset + 19) ? null : cursor.getLong(offset + 19), // disableFlag
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // disableMsg
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // disableTime
            cursor.isNull(offset + 22) ? null : cursor.getLong(offset + 22), // autoEnable
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // autoEnableTime
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // weixinBindOpenid
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // alipayBindOpenid
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // deviceId
            cursor.isNull(offset + 27) ? null : cursor.getLong(offset + 27), // delFlag
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28) // weixinPayAppid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, UserInfoBean entity, int offset) {
        entity.setUserId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setUsername(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPhone(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPassword(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSalt(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setInviteCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAvatar(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setGender(cursor.isNull(offset + 7) ? null : cursor.getLong(offset + 7));
        entity.setBirthday(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setStatus(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setAlipayAccount(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAlipayName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setWeixinPayName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setWeixinPayPhone(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setWeixinPayNickname(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setWeixinPayOpenid(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setWeixinPayAvatar(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCreateTime(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setModifyTime(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDisableFlag(cursor.isNull(offset + 19) ? null : cursor.getLong(offset + 19));
        entity.setDisableMsg(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setDisableTime(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setAutoEnable(cursor.isNull(offset + 22) ? null : cursor.getLong(offset + 22));
        entity.setAutoEnableTime(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setWeixinBindOpenid(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAlipayBindOpenid(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setDeviceId(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDelFlag(cursor.isNull(offset + 27) ? null : cursor.getLong(offset + 27));
        entity.setWeixinPayAppid(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(UserInfoBean entity, long rowId) {
        entity.setUserId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(UserInfoBean entity) {
        if(entity != null) {
            return entity.getUserId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(UserInfoBean entity) {
        return entity.getUserId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
